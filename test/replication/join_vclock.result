fiber = require('fiber')
---
...
env = require('test_run')
---
...
replica_set = require('fast_vreplica')
---
...
test_run = env.new()
---
...
engine = test_run:get_cfg('engine')
---
...
errinj = box.error.injection
---
...
errinj.set("ERRINJ_RELAY_FINAL_SLEEP", true)
---
- ok
...
box.schema.user.grant('guest', 'replication')
---
...
s = box.schema.space.create('test', {engine = engine});
---
...
index = s:create_index('primary')
---
...
ch = fiber.channel(1)
---
...
done = false
---
...
function repl_f() local i = 0 while not done do s:replace({i, i}) fiber.sleep(0.001) i = i + 1 end ch:put(true) end
---
...
_ = fiber.create(repl_f)
---
...
replica_set.join(test_run, 1)
---
...
test_run:cmd("switch vreplica1")
---
- true
...
test_run:cmd("switch default")
---
- true
...
done = true
---
...
ch:get()
---
- true
...
errinj.set("ERRINJ_RELAY_FINAL_SLEEP", false)
---
- ok
...
test_run:cmd("switch vreplica1")
---
- true
...
test_run:wait_cond(function() return box.info.replication[1].upstream.status == 'follow' end, 100)
---
- true
...
cnt = box.space.test.index[0]:count()
---
...
test_run:wait_cond(function() return box.space.test.index.primary:max()[1] == cnt - 1 end, 500)
---
- true
...
test_run:cmd("switch default")
---
- true
...
replica_set.drop_all(test_run)
---
...
box.space.test:drop()
---
...
box.schema.user.revoke('guest', 'replication')
---
...
